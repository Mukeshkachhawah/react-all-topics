Question 1. Q: Humara e-commerce website hai jisme bahut saare products hain. Hume products ko categories ke basis pe group karna hai aur har category ke top 5 most expensive products nikalne hain. Iska query kaise likhenge?
Answer :Pehle $group operator se products ko category wise group kiya
Fir $project and $slice se har category ke top 5 expensive products nikal liye
Scenario: User Activity Tracking
// First, we'll use aggregation pipeline
db.products.aggregate([
  // Step 1: Group by category
  { $group: {
      _id: "$category",
      products: { 
        $push: {
          name: "$name",
          price: "$price",
          description: "$description"
        }
      }
    }
  },
  // Step 2: Sort products within each group
  { $project: {
      category: "$_id",
      topProducts: {
        $slice: [
          { $sortArray: { 
              input: "$products", 
              sortBy: { price: -1 } 
          }}, 
          5
        ]
      }
    }
  }
])

Question 2.Humare website pe users ke last 24 hours ke actions track karne hain. User ne kitni baar login kiya, kya kya pages visit kiye, etc. Ye data kaise store karein aur query kaise karein?
Answer: 
// Document structure
{
  userId: ObjectId("..."),
  action: "LOGIN",
  timestamp: ISODate("2025-01-20T10:30:00Z"),
  details: {
    deviceType: "mobile",
    browser: "Chrome",
    ipAddress: "192.168.1.1"
  }
}

// Query for last 24 hours activity
db.userActivity.find({
  userId: ObjectId("user_id_here"),
  timestamp: {
    $gte: new Date(Date.now() - 24*60*60*1000)
  }
}).sort({timestamp: -1})

// Get count of actions by type
db.userActivity.aggregate([
  {
    $match: {
      userId: ObjectId("user_id_here"),
      timestamp: {
        $gte: new Date(Date.now() - 24*60*60*1000)
      }
    }
  },
  {
    $group: {
      _id: "$action",
      count: { $sum: 1 }
    }
  }
])

Isme humne:

Har action ko timestamp ke saath store kiya
Last 24 hours ka data nikalne ke liye $gte operator use kiya
Actions ki counting ke liye aggregation pipeline use kiya

Question 3. Hume apne website pe real-time search implement karna hai jahan user type karte hi results show hon. MongoDB mein text search kaise implement karein? Performance ke liye kya dhyan rakhna chahiye?
Answer :// First create text index
db.products.createIndex({ 
  name: "text", 
  description: "text" 
})

// Basic text search query
db.products.find({
  $text: {
    $search: "mobile phone samsung"
  }
}, {
  score: { $meta: "textScore" }
}).sort({
  score: { $meta: "textScore" }
})

// For partial word matching (better for real-time)
db.products.find({
  name: { 
    $regex: "^" + searchText,
    $options: "i"
  }
}).limit(10)

Real-time search ke liye important points:

Text index zaroor banayein - ye searching ko fast karta hai
Partial matching ke liye regex use karein
Results ko limit karein (like 10) taki performance acchi rahe
Heavy fields ko projection se exclude kar sakte hain
