1. Controlled components wo components hote hain jo React state ke control mein hote hain. Input ka value state se bind hota hai, aur har update React ke state ko modify karta hai.

import React, { useState } from "react";

function ControlledComponent() {
  const [name, setName] = useState("");

  const handleChange = (e) => {
    setName(e.target.value); // Input ka value state se control ho raha hai
  };

  return (
    <div>
      <input type="text" value={name} onChange={handleChange} />
      <p>Your name is: {name}</p>
    </div>
  );
}

export default ControlledComponent;

Key Points:
Input ka value state se control hota hai.
onChange event handler ke through state update hoti hai.

Fayde:
Input ka har update React ke state ke sath sync hota hai, isse data consistent rehta hai.
Form validation aur input processing asaan hoti hai.

2. Uncontrolled Components :
Uncontrolled components me input field ka data directly DOM se manage kiya jata hai, aur React state ka use nahi hota.

import React, { useRef } from "react";

function UncontrolledComponent() {
  const inputRef = useRef(null);

  const handleSubmit = () => {
    alert(`Entered value: ${inputRef.current.value}`); // Directly DOM se value access ki gayi
  };

  return (
    <div>
      <input type="text" ref={inputRef} />
      <button onClick={handleSubmit}>Submit</button>
    </div>
  );
}

export default UncontrolledComponent;

Key Points:
useRef ka use hota hai direct DOM element ko access karne ke liye.
Input ka value React ke state se nahi, DOM ke reference se milta hai.

Fayde:
Simple aur lightweight implementation.
Form submission aur validation ke liye custom logic implement karne me asaan hota hai.

Comparison:
Controlled components me data React ke state se control hota hai, aur uncontrolled components me data directly DOM se manage kiya jata hai.

Nuksan:
State ke sath sync nahi hota, isse data manage karna mushkil ho sakta hai.

Jab use karna hai:
Controlled components jab data ko React ke state se control karna hai aur form validation aur input processing asaan hona chahiye, tab use karna hai.
Uncontrolled components jab custom logic implement karna hai aur form submission aur validation ke liye asaan implementation chahiye, tab use karna hai.

+---------------+-------------------------+------------------------+
| Feature       | Controlled Component     | Uncontrolled Component  |
+---------------+-------------------------+------------------------+
| Data Handling | React state ke sath      | DOM references ke sath  |
| State Mgmt    | Har update state ko modify | No direct state usage   |
| Flexibility   | Zyada flexible, easy validation | Simple, limited control |
+---------------+-------------------------+------------------------+

In most modern React applications, controlled components preferred hote hain kyunki ye data consistency aur better state management provide karte hain.